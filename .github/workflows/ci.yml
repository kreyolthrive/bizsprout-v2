name: CI

on:
  push:
    branches: [ main, "**" ]
  pull_request:
    branches: [ main, "**" ]
  workflow_dispatch:
  schedule:
    - cron: '17 3 * * *' # nightly run at 03:17 UTC

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true
      - name: Lint (scoped)
        run: pnpm run lint:ci

  quick:
    name: Quick Sanity (ci:quick)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true
      - name: Run ci:quick
        run: pnpm run ci:quick || echo "Quick check failed (continuing for visibility)"

  build-matrix:
    name: Matrix Typecheck & Fonts (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true
      - name: Typecheck
        run: pnpm run typecheck
      - name: Fetch fonts (Inter)
        run: pnpm run fonts:fetch
      - name: Fonts check (blocking)
        run: pnpm run fonts:check
      - name: Font integrity (hash verify)
        run: pnpm run fonts:integrity
      - name: Font integrity report artifact
        run: FONT_REPORT_PATH=font-report.json pnpm run fonts:integrity || true
      - name: Upload font integrity report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: font-report-${{ matrix.node }}
          path: font-report.json
      - name: List font files & sizes
        run: |
          ls -l public/fonts/inter || true
          sha256sum public/fonts/inter/*.woff2 || true

  playwright:
    name: Playwright (Node 20)
    runs-on: ubuntu-latest
    needs: [build-matrix]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true
      - name: Cache Playwright Browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            playwright-${{ runner.os }}-
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run full Playwright suite (trace on)
        run: pnpm exec playwright test --trace=on --reporter=html,line
      - name: Upload Playwright report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
      - name: Upload raw test results (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results

  coverage:
    name: Coverage (Node 20)
    runs-on: ubuntu-latest
    needs: [build-matrix]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true
      - name: Run coverage
        run: pnpm run test:coverage || echo "Coverage run failed" 
      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

  nightly-perf:
    name: Nightly Performance (k6 placeholder)
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder perf step
        run: echo "Add k6 or hey/oha performance scripts here"
  real-pdf:
    name: Real PDF Render (scheduled)
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    needs: [build-matrix]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true
      - name: Cache Playwright Browsers
        uses: actions/cache@v4
        with:
            path: ~/.cache/ms-playwright
            key: playwright-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
            restore-keys: |
              playwright-${{ runner.os }}-
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run real PDF spec only
        env:
          RUN_REAL_PDF: '1'
        run: pnpm exec playwright test tests/downloadReport.real.spec.ts --reporter=line
